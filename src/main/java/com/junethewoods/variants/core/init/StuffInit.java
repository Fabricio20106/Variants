package com.junethewoods.variants.core.init;

import com.junethewoods.variants.core.Variants;
import com.junethewoods.variants.core.tabs.VariantBlocks;
import com.junethewoods.variants.core.tabs.VariantTab;
import com.junethewoods.variants.core.entity.VariantBoatEntity;
import com.junethewoods.variants.common.item.*;
import com.junethewoods.variants.core.sound.VariantSounds;
import net.minecraft.entity.item.minecart.AbstractMinecartEntity;
import net.minecraft.item.*;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;

public class StuffInit {
    public static final DeferredRegister<Item> items = DeferredRegister.create(ForgeRegistries.ITEMS, Variants.mod_id);

    public static final RegistryObject<Item> raw_debris_block = items.register("raw_debris_block", () -> new BlockItem(BlockInit.raw_debris_block.get(), new Item.Properties().isImmuneToFire().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> glow_black_wool = items.register("glow_black_wool", () -> new BlockItem(BlockInit.glow_black_wool.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> glow_black_carpet = items.register("glow_black_carpet", () -> new BlockItem(BlockInit.glow_black_carpet.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_planks = items.register("painting_planks", () -> new BlockItem(BlockInit.painting_planks.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_log = items.register("painting_log", () -> new BlockItem(BlockInit.painting_log.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_wood = items.register("painting_wood", () -> new BlockItem(BlockInit.painting_wood.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> stripped_painting_log = items.register("stripped_painting_log", () -> new BlockItem(BlockInit.stripped_painting_log.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> stripped_painting_wood = items.register("stripped_painting_wood", () -> new BlockItem(BlockInit.stripped_painting_wood.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_leaves = items.register("painting_leaves", () -> new BlockItem(BlockInit.painting_leaves.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_stairs = items.register("painting_stairs", () -> new BlockItem(BlockInit.painting_stairs.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_slab = items.register("painting_slab", () -> new BlockItem(BlockInit.painting_slab.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_fence = items.register("painting_fence", () -> new BlockItem(BlockInit.painting_fence.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_fence_gate = items.register("painting_fence_gate", () -> new BlockItem(BlockInit.painting_fence_gate.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_pressure_plate = items.register("painting_pressure_plate", () -> new BlockItem(BlockInit.painting_pressure_plate.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_button = items.register("painting_button", () -> new BlockItem(BlockInit.painting_button.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_trapdoor = items.register("painting_trapdoor", () -> new BlockItem(BlockInit.painting_trapdoor.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_door = items.register("painting_door", () -> new BlockItem(BlockInit.painting_door.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_stem = items.register("ender_stem", () -> new BlockItem(BlockInit.ender_stem.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_hyphae = items.register("ender_hyphae", () -> new BlockItem(BlockInit.ender_hyphae.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> stripped_ender_stem = items.register("stripped_ender_stem", () -> new BlockItem(BlockInit.stripped_ender_stem.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> stripped_ender_hyphae = items.register("stripped_ender_hyphae", () -> new BlockItem(BlockInit.stripped_ender_hyphae.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_planks = items.register("ender_planks", () -> new BlockItem(BlockInit.ender_planks.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_nylium = items.register("ender_nylium", () -> new BlockItem(BlockInit.ender_nylium.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_bookshelf = items.register("ender_bookshelf", () -> new BlockItem(BlockInit.ender_bookshelf.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_wart_block = items.register("ender_wart_block", () -> new BlockItem(BlockInit.ender_wart_block.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_stairs = items.register("ender_stairs", () -> new BlockItem(BlockInit.ender_stairs.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_slab = items.register("ender_slab", () -> new BlockItem(BlockInit.ender_slab.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_fence = items.register("ender_fence", () -> new BlockItem(BlockInit.ender_fence.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_fence_gate = items.register("ender_fence_gate", () -> new BlockItem(BlockInit.ender_fence_gate.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_trapdoor = items.register("ender_trapdoor", () -> new BlockItem(BlockInit.ender_trapdoor.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_door = items.register("ender_door", () -> new BlockItem(BlockInit.ender_door.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> graham_door = items.register("graham_door", () -> new BlockItem(BlockInit.graham_door.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> wanderer_door = items.register("wanderer_door", () -> new BlockItem(BlockInit.wanderer_door.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> quartz_glass = items.register("quartz_glass", () -> new BlockItem(BlockInit.quartz_glass.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> quartz_ore = items.register("quartz_ore", () -> new BlockItem(BlockInit.quartz_ore.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> end_quartz_ore = items.register("end_quartz_ore", () -> new BlockItem(BlockInit.end_quartz_ore.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> wither_bone_block = items.register("wither_bone_block", () -> new BlockItem(BlockInit.wither_bone_block.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> chiseled_end_stone_bricks = items.register("chiseled_end_stone_bricks", () -> new BlockItem(BlockInit.chiseled_end_stone_bricks.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> chiseled_purpur_block = items.register("chiseled_purpur_block", () -> new BlockItem(BlockInit.chiseled_purpur_block.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> end_stone_pillar = items.register("end_stone_pillar", () -> new BlockItem(BlockInit.end_stone_pillar.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> mossy_end_stone_bricks = items.register("mossy_end_stone_bricks", () -> new BlockItem(BlockInit.mossy_end_stone_bricks.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> mossy_end_stone_brick_stairs = items.register("mossy_end_stone_brick_stairs", () -> new BlockItem(BlockInit.mossy_end_stone_brick_stairs.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> mossy_end_stone_brick_slab = items.register("mossy_end_stone_brick_slab", () -> new BlockItem(BlockInit.mossy_end_stone_brick_slab.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> mossy_nether_bricks = items.register("mossy_nether_bricks", () -> new BlockItem(BlockInit.mossy_nether_bricks.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> mossy_nether_brick_stairs = items.register("mossy_nether_brick_stairs", () -> new BlockItem(BlockInit.mossy_nether_brick_stairs.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> mossy_nether_brick_slab = items.register("mossy_nether_brick_slab", () -> new BlockItem(BlockInit.mossy_nether_brick_slab.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> mossy_purpur_block = items.register("mossy_purpur_block", () -> new BlockItem(BlockInit.mossy_purpur_block.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> mossy_purpur_stairs = items.register("mossy_purpur_stairs", () -> new BlockItem(BlockInit.mossy_purpur_stairs.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> mossy_purpur_slab = items.register("mossy_purpur_slab", () -> new BlockItem(BlockInit.mossy_purpur_slab.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> nether_brick_pillar = items.register("nether_brick_pillar", () -> new BlockItem(BlockInit.nether_brick_pillar.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> smooth_purpur = items.register("smooth_purpur", () -> new BlockItem(BlockInit.smooth_purpur.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> smooth_purpur_slab = items.register("smooth_purpur_slab", () -> new BlockItem(BlockInit.smooth_purpur_slab.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> red_nether_brick_fence = items.register("red_nether_brick_fence", () -> new BlockItem(BlockInit.red_nether_brick_fence.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> elder_prismarine = items.register("elder_prismarine", () -> new BlockItem(BlockInit.elder_prismarine.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> elder_prismarine_stairs = items.register("elder_prismarine_stairs", () -> new BlockItem(BlockInit.elder_prismarine_stairs.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> elder_prismarine_slab = items.register("elder_prismarine_slab", () -> new BlockItem(BlockInit.elder_prismarine_slab.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> elder_prismarine_wall = items.register("elder_prismarine_wall", () -> new BlockItem(BlockInit.elder_prismarine_wall.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> elder_prismarine_bricks = items.register("elder_prismarine_bricks", () -> new BlockItem(BlockInit.elder_prismarine_bricks.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> elder_prismarine_brick_stairs = items.register("elder_prismarine_brick_stairs", () -> new BlockItem(BlockInit.elder_prismarine_brick_stairs.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> elder_prismarine_brick_slab = items.register("elder_prismarine_brick_slab", () -> new BlockItem(BlockInit.elder_prismarine_brick_slab.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> dark_elder_prismarine = items.register("dark_elder_prismarine", () -> new BlockItem(BlockInit.dark_elder_prismarine.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> dark_elder_prismarine_stairs = items.register("dark_elder_prismarine_stairs", () -> new BlockItem(BlockInit.dark_elder_prismarine_stairs.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> dark_elder_prismarine_slab = items.register("dark_elder_prismarine_slab", () -> new BlockItem(BlockInit.dark_elder_prismarine_slab.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> elder_sea_lantern = items.register("elder_sea_lantern", () -> new BlockItem(BlockInit.elder_sea_lantern.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> alban_trapdoor = items.register("alban_trapdoor", () -> new BlockItem(BlockInit.alban_trapdoor.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> aztec_trapdoor = items.register("aztec_trapdoor", () -> new BlockItem(BlockInit.aztec_trapdoor.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> aztec2_trapdoor = items.register("aztec2_trapdoor", () -> new BlockItem(BlockInit.aztec2_trapdoor.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> bomb_trapdoor = items.register("bomb_trapdoor", () -> new BlockItem(BlockInit.bomb_trapdoor.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> kebab_trapdoor = items.register("kebab_trapdoor", () -> new BlockItem(BlockInit.kebab_trapdoor.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> plant_trapdoor = items.register("plant_trapdoor", () -> new BlockItem(BlockInit.plant_trapdoor.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> wasteland_trapdoor = items.register("wasteland_trapdoor", () -> new BlockItem(BlockInit.wasteland_trapdoor.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> azure_bluet_leaves = items.register("azure_bluet_leaves", () -> new BlockItem(BlockInit.azure_bluet_leaves.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> gold_cauldron = items.register("gold_cauldron", () -> new BlockItem(BlockInit.gold_cauldron.get(), new Item.Properties().rarity(Rarity.UNCOMMON).group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> gold_beacon = items.register("gold_beacon", () -> new BlockItem(BlockInit.gold_beacon.get(), new Item.Properties().rarity(Rarity.UNCOMMON).group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> quartz_cauldron = items.register("quartz_cauldron", () -> new BlockItem(BlockInit.quartz_cauldron.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> quartz_beacon = items.register("quartz_beacon", () -> new BlockItem(BlockInit.quartz_beacon.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> quartz_glass_pane = items.register("quartz_glass_pane", () -> new BlockItem(BlockInit.quartz_glass_pane.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> quartz_chain = items.register("quartz_chain", () -> new BlockItem(BlockInit.quartz_chain.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> quartz_bars = items.register("quartz_bars", () -> new BlockItem(BlockInit.quartz_bars.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> quartz_ladder = items.register("quartz_ladder", () -> new BlockItem(BlockInit.quartz_ladder.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> golden_carrots = items.register("golden_carrots", () -> new BlockItem(BlockInit.golden_carrots.get(), new Item.Properties().rarity(Rarity.UNCOMMON).group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> potted_sugar_cane = items.register("potted_sugar_cane", () -> new BlockItem(BlockInit.potted_sugar_cane.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> potted_glow_black_tulip = items.register("potted_glow_black_tulip", () -> new BlockItem(BlockInit.potted_glow_black_tulip.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> potted_sunny_flower = items.register("potted_sunny_flower", () -> new BlockItem(BlockInit.potted_sunny_flower.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> potted_torch = items.register("potted_torch", () -> new BlockItem(BlockInit.potted_torch.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> potted_soul_torch = items.register("potted_soul_torch", () -> new BlockItem(BlockInit.potted_soul_torch.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> potted_golden_carrots = items.register("potted_golden_carrots", () -> new BlockItem(BlockInit.potted_golden_carrots.get(), new Item.Properties().rarity(Rarity.UNCOMMON).group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> potted_warped_wart = items.register("potted_warped_wart", () -> new BlockItem(BlockInit.potted_warped_wart.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> glow_black_tulip = items.register("glow_black_tulip", () -> new BlockItem(BlockInit.glow_black_tulip.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> sunny_flower = items.register("sunny_flower", () -> new BlockItem(BlockInit.sunny_flower.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> glow_berry_bush = items.register("glow_berry_bush", () -> new BlockItem(BlockInit.glow_berry_bush.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> warped_wart = items.register("warped_wart", () -> new BlockNamedItem(BlockInit.warped_wart.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> painting_sapling = items.register("painting_sapling", () -> new BlockItem(BlockInit.painting_sapling.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_roots = items.register("ender_roots", () -> new BlockItem(BlockInit.ender_roots.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_fungus = items.register("ender_fungus", () -> new BlockItem(BlockInit.ender_fungus.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> ender_sprouts = items.register("ender_sprouts", () -> new BlockItem(BlockInit.ender_sprouts.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> soul_brewing_stand = items.register("soul_brewing_stand", () -> new BlockItem(BlockInit.soul_brewing_stand.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> netherrack_lever = items.register("netherrack_lever", () -> new BlockItem(BlockInit.netherrack_lever.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> end_stone_lever = items.register("end_stone_lever", () -> new BlockItem(BlockInit.end_stone_lever.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> emerald_chain = items.register("emerald_chain", () -> new BlockItem(BlockInit.emerald_chain.get(), new Item.Properties().group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> diamond_chain = items.register("diamond_chain", () -> new BlockItem(BlockInit.diamond_chain.get(), new Item.Properties().rarity(Rarity.RARE).group(VariantBlocks.blocks)));
    public static final RegistryObject<Item> diamond_bell = items.register("diamond_bell", () -> new BlockItem(BlockInit.diamond_bell.get(), new Item.Properties().rarity(Rarity.RARE).group(VariantBlocks.blocks)));

    public static final RegistryObject<Item> white_shulker_shell = items.register("white_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> orange_shulker_shell = items.register("orange_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> magenta_shulker_shell = items.register("magenta_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> light_blue_shulker_shell = items.register("light_blue_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> glow_black_shulker_shell = items.register("glow_black_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> yellow_shulker_shell = items.register("yellow_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> lime_shulker_shell = items.register("lime_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> pink_shulker_shell = items.register("pink_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> gray_shulker_shell = items.register("gray_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> light_gray_shulker_shell = items.register("light_gray_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> cyan_shulker_shell = items.register("cyan_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> purple_shulker_shell = items.register("purple_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> blue_shulker_shell = items.register("blue_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> brown_shulker_shell = items.register("brown_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> green_shulker_shell = items.register("green_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> red_shulker_shell = items.register("red_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> black_shulker_shell = items.register("black_shulker_shell", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> soul_lava_bucket = items.register("soul_lava_bucket", () -> new BucketItem(() -> FluidInit.soul_lava.get(), new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> painting_boat = items.register("painting_boat", () -> new VariantBoatItem(new Item.Properties().maxStackSize(1).group(VariantTab.variant), VariantBoatEntity.Type.painting));
    public static final RegistryObject<Item> crimson_boat = items.register("crimson_boat", () -> new VariantBoatItem(new Item.Properties().maxStackSize(1).group(VariantTab.variant), VariantBoatEntity.Type.crimson));
    public static final RegistryObject<Item> warped_boat = items.register("warped_boat", () -> new VariantBoatItem(new Item.Properties().maxStackSize(1).group(VariantTab.variant), VariantBoatEntity.Type.warped));
    public static final RegistryObject<Item> music_disc_dog = items.register("music_disc_dog", () -> new MusicDiscItem(5, () -> VariantSounds.dog, new Item.Properties().maxStackSize(1).rarity(Rarity.RARE).group(VariantTab.variant)));
    public static final RegistryObject<Item> spawner_minecart = items.register("spawner_minecart", () -> new MinecartItem(AbstractMinecartEntity.Type.SPAWNER, new Item.Properties().maxStackSize(1).group(VariantTab.variant)));
    public static final RegistryObject<Item> fungi_stew = items.register("fungi_stew", () -> new SoupItem(new Item.Properties().group(VariantTab.variant).maxStackSize(1).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> end_fungi_stew = items.register("end_fungi_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().maxStackSize(1).group(VariantTab.variant).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> enchanted_knowledge_book = items.register("enchanted_knowledge_book", () -> new KnowledgeBookItem(new Item.Properties().maxStackSize(1).group(VariantTab.variant)));
    public static final RegistryObject<Item> wither_bone = items.register("wither_bone", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> wither_bone_meal = items.register("wither_bone_meal", () -> new BoneMealItem(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> splash_experience_bottle = items.register("splash_experience_bottle", () -> new ExperienceBottleItem(new Item.Properties().rarity(Rarity.UNCOMMON).group(VariantTab.variant)));
    public static final RegistryObject<Item> lingering_experience_bottle = items.register("lingering_experience_bottle", () -> new ExperienceBottleItem(new Item.Properties().rarity(Rarity.UNCOMMON).group(VariantTab.variant)));
    public static final RegistryObject<Item> splash_dragon_breath = items.register("splash_dragon_breath", () -> new Item(new Item.Properties().containerItem(Items.SPLASH_POTION).rarity(Rarity.UNCOMMON).group(VariantTab.variant)));
    public static final RegistryObject<Item> lingering_dragon_breath = items.register("lingering_dragon_breath", () -> new Item(new Item.Properties().containerItem(Items.LINGERING_POTION).rarity(Rarity.UNCOMMON).group(VariantTab.variant)));
    public static final RegistryObject<Item> splash_glass_bottle = items.register("splash_glass_bottle", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> lingering_glass_bottle = items.register("lingering_glass_bottle", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> mushroom_stew_bucket = items.register("mushroom_stew_bucket", () -> new StewBucketItem(() -> FluidInit.mushroom_stew.get(), new Item.Properties().maxStackSize(1).food(Foods.MUSHROOM_STEW).group(VariantTab.variant)));
    public static final RegistryObject<Item> beetroot_soup_bucket = items.register("beetroot_soup_bucket", () -> new StewBucketItemOld(new Item.Properties().maxStackSize(1).food(Foods.BEETROOT_SOUP).group(VariantTab.variant)));
    public static final RegistryObject<Item> rabbit_stew_bucket = items.register("rabbit_stew_bucket", () -> new StewBucketItemOld(new Item.Properties().maxStackSize(1).food(Foods.RABBIT_STEW).group(VariantTab.variant)));
    public static final RegistryObject<Item> fungi_stew_bucket = items.register("fungi_stew_bucket", () -> new StewBucketItemOld(new Item.Properties().maxStackSize(1).food(Foods.MUSHROOM_STEW).group(VariantTab.variant)));
    public static final RegistryObject<Item> end_fungi_stew_bucket = items.register("end_fungi_stew_bucket", () -> new StewBucketItemOld(new Item.Properties().maxStackSize(1).food(Foods.MUSHROOM_STEW).group(VariantTab.variant)));
    public static final RegistryObject<Item> honey_ball = items.register("honey_ball", () -> new HoneyBallItem(new Item.Properties().food(Foods.HONEY).group(VariantTab.variant)));
    public static final RegistryObject<Item> raw_debris = items.register("raw_debris", () -> new Item(new Item.Properties().isImmuneToFire().group(VariantTab.variant)));
    public static final RegistryObject<Item> old_cod = items.register("old_cod", () -> new Item(new Item.Properties().food(Foods.COD).group(VariantTab.variant)));
    public static final RegistryObject<Item> old_cooked_cod = items.register("old_cooked_cod", () -> new Item(new Item.Properties().food(Foods.COOKED_COD).group(VariantTab.variant)));
    public static final RegistryObject<Item> stylised_pot = items.register("stylised_pot", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> sweet_berry_pot = items.register("sweet_berry_pot", () -> new BerryPotItem(new Item.Properties().food(Foods.APPLE).maxStackSize(8).group(VariantTab.variant)));
    public static final RegistryObject<Item> glow_berry_pot = items.register("glow_berry_pot", () -> new BerryPotItem(new Item.Properties().food(Foods.APPLE).maxStackSize(8).group(VariantTab.variant)));
    public static final RegistryObject<Item> sugar_pot = items.register("sugar_pot", () -> new Item(new Item.Properties().maxStackSize(1).group(VariantTab.variant)));
    public static final RegistryObject<Item> redstone_pot = items.register("redstone_pot", () -> new Item(new Item.Properties().maxStackSize(1).group(VariantTab.variant)));
    public static final RegistryObject<Item> glowstone_pot = items.register("glowstone_pot", () -> new Item(new Item.Properties().maxStackSize(1).food(VariantFoods.glowstone_pot).group(VariantTab.variant)));
    public static final RegistryObject<Item> gunpowder_pot = items.register("gunpowder_pot", () -> new Item(new Item.Properties().maxStackSize(1).group(VariantTab.variant)));
    public static final RegistryObject<Item> red_nether_brick = items.register("red_nether_brick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> exposed_copper_ingot = items.register("exposed_copper_ingot", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> weathered_copper_ingot = items.register("weathered_copper_ingot", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> oxidized_copper_ingot = items.register("oxidized_copper_ingot", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> oak_stick = items.register("oak_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> spruce_stick = items.register("spruce_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> birch_stick = items.register("birch_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> jungle_stick = items.register("jungle_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> acacia_stick = items.register("acacia_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> dark_oak_stick = items.register("dark_oak_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> crimson_stick = items.register("crimson_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> warped_stick = items.register("warped_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> painting_stick = items.register("painting_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> ender_stick = items.register("ender_stick", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> netherite_rod = items.register("netherite_rod", () -> new Item(new Item.Properties().group(VariantTab.variant).isImmuneToFire()));
    public static final RegistryObject<Item> soul_rod = items.register("soul_rod", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> soul_powder = items.register("soul_powder", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> soul_charge = items.register("soul_charge", () -> new FireChargeItem(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> crystallized_honey = items.register("crystallized_honey", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> wooden_railbed = items.register("wooden_railbed", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> powered_railbed = items.register("powered_railbed", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> corner_iron_tie = items.register("corner_iron_tie", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> iron_tie = items.register("iron_tie", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> powered_tie = items.register("powered_tie", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> detector_plate = items.register("detector_plate", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> quartz_nugget = items.register("quartz_nugget", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> diamond_nugget = items.register("diamond_nugget", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> emerald_nugget = items.register("emerald_nugget", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> milk_glass_bottle = items.register("milk_glass_bottle", () -> new MilkBottleItem(new Item.Properties().maxStackSize(8).group(VariantTab.variant)));
    public static final RegistryObject<Item> lava_glass_bottle = items.register("lava_glass_bottle", () -> new LavaBottleItem(new Item.Properties().maxStackSize(8).group(VariantTab.variant)));
    public static final RegistryObject<Item> powder_snow_bottle = items.register("powder_snow_bottle", () -> new Item(new Item.Properties().maxStackSize(8).group(VariantTab.variant)));
    public static final RegistryObject<Item> glow_black_dye = items.register("glow_black_dye", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> elder_prismarine_shard = items.register("elder_prismarine_shard", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> elder_prismarine_crystals = items.register("elder_prismarine_crystals", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> oak_bowl = items.register("oak_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> spruce_bowl = items.register("spruce_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> birch_bowl = items.register("birch_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> jungle_bowl = items.register("jungle_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> acacia_bowl = items.register("acacia_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> dark_oak_bowl = items.register("dark_oak_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> crimson_bowl = items.register("crimson_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> warped_bowl = items.register("warped_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> painting_bowl = items.register("painting_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));
    public static final RegistryObject<Item> ender_bowl = items.register("ender_bowl", () -> new Item(new Item.Properties().group(VariantTab.variant)));

}
