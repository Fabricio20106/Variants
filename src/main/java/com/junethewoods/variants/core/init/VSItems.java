package com.junethewoods.variants.core.init;

import com.junethewoods.variants.core.Variants;
import com.junethewoods.variants.core.sound.VSSounds;
import com.junethewoods.variants.common.item.*;
import net.minecraft.world.effect.MobEffectInstance;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.entity.vehicle.AbstractMinecart;
import net.minecraft.world.food.FoodProperties;
import net.minecraft.world.food.Foods;
import net.minecraft.world.item.*;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

import static com.junethewoods.variants.core.VSLocations.QUARTZ_HORSE_ARMOR_LOCATION;

public class VSItems {
    public static final DeferredRegister<Item> ITEMS = DeferredRegister.create(ForgeRegistries.ITEMS, Variants.MOD_ID);

    // Building Blocks (Variants)
    public static final RegistryObject<Item> ENDER_NYLIUM = ITEMS.register("ender_nylium", () -> new BlockItem(VSBlocks.ender_nylium.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> PAINTING_PLANKS = ITEMS.register("painting_planks", () -> new BlockItem(VSBlocks.PAINTING_PLANKS.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ENDER_PLANKS = ITEMS.register("ender_planks", () -> new BlockItem(VSBlocks.ender_planks.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> QUARTZ_ORE = ITEMS.register("quartz_ore", () -> new BlockItem(VSBlocks.quartz_ore.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> END_QUARTZ_ORE = ITEMS.register("end_quartz_ore", () -> new BlockItem(VSBlocks.end_quartz_ore.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> NETHER_COAL_ORE = ITEMS.register("nether_coal_ore", () -> new BlockItem(VSBlocks.nether_coal_ore.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> PAINTING_LOG = ITEMS.register("painting_log", () -> new BlockItem(VSBlocks.painting_log.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ENDER_STEM = ITEMS.register("ender_stem", () -> new BlockItem(VSBlocks.ender_stem.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> STRIPPED_PAINTING_LOG = ITEMS.register("stripped_painting_log", () -> new BlockItem(VSBlocks.stripped_painting_log.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> STRIPPED_ENDER_STEM = ITEMS.register("stripped_ender_stem", () -> new BlockItem(VSBlocks.stripped_ender_stem.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> STRIPPED_PAINTING_WOOD = ITEMS.register("stripped_painting_wood", () -> new BlockItem(VSBlocks.stripped_painting_wood.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> STRIPPED_ENDER_HYPHAE = ITEMS.register("stripped_ender_hyphae", () -> new BlockItem(VSBlocks.stripped_ender_hyphae.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> PAINTING_WOOD = ITEMS.register("painting_wood", () -> new BlockItem(VSBlocks.painting_wood.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ENDER_HYPHAE = ITEMS.register("ender_hyphae", () -> new BlockItem(VSBlocks.ender_hyphae.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> QUARTZ_GLASS = ITEMS.register("quartz_glass", () -> new BlockItem(VSBlocks.QUARTZ_GLASS.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> GLOW_BLACK_WOOL = ITEMS.register("glow_black_wool", () -> new BlockItem(VSBlocks.glow_black_wool.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> RAW_DEBRIS_BLOCK = ITEMS.register("raw_debris_block", () -> new BlockItem(VSBlocks.raw_debris_block.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks).fireResistant()));
    public static final RegistryObject<Item> PAINTING_SLAB = ITEMS.register("painting_slab", () -> new BlockItem(VSBlocks.painting_slab.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ENDER_SLAB = ITEMS.register("ender_slab", () -> new BlockItem(VSBlocks.ender_slab.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> MOSSY_END_STONE_BRICK_SLAB = ITEMS.register("mossy_end_stone_brick_slab", () -> new BlockItem(VSBlocks.mossy_end_stone_brick_slab.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> MOSSY_NETHER_BRICK_SLAB = ITEMS.register("mossy_nether_brick_slab", () -> new BlockItem(VSBlocks.mossy_nether_brick_slab.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> MOSSY_PURPUR_SLAB = ITEMS.register("mossy_purpur_slab", () -> new BlockItem(VSBlocks.mossy_purpur_slab.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> SMOOTH_PURPUR_SLAB = ITEMS.register("smooth_purpur_slab", () -> new BlockItem(VSBlocks.smooth_purpur_slab.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_SLAB = ITEMS.register("elder_prismarine_slab", () -> new BlockItem(VSBlocks.elder_prismarine_slab.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_BRICK_SLAB = ITEMS.register("elder_prismarine_brick_slab", () -> new BlockItem(VSBlocks.elder_prismarine_brick_slab.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> DARK_ELDER_PRISMARINE_SLAB = ITEMS.register("dark_elder_prismarine_slab", () -> new BlockItem(VSBlocks.dark_elder_prismarine_slab.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> SMOOTH_PURPUR = ITEMS.register("smooth_purpur", () -> new BlockItem(VSBlocks.smooth_purpur.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ENDER_BOOKSHELF = ITEMS.register("ender_bookshelf", () -> new BlockItem(VSBlocks.ender_bookshelf.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> PAINTING_STAIRS = ITEMS.register("painting_stairs", () -> new BlockItem(VSBlocks.painting_stairs.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> MOSSY_END_STONE_BRICKS = ITEMS.register("mossy_end_stone_bricks", () -> new BlockItem(VSBlocks.mossy_end_stone_bricks.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> MOSSY_NETHER_BRICKS = ITEMS.register("mossy_nether_bricks", () -> new BlockItem(VSBlocks.mossy_nether_bricks.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> MOSSY_PURPUR_BLOCK = ITEMS.register("mossy_purpur_block", () -> new BlockItem(VSBlocks.mossy_purpur_block.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> CHISELED_END_STONE_BRICKS = ITEMS.register("chiseled_end_stone_bricks", () -> new BlockItem(VSBlocks.chiseled_end_stone_bricks.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> CHISELED_PURPUR_BLOCK = ITEMS.register("chiseled_purpur_block", () -> new BlockItem(VSBlocks.chiseled_purpur_block.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> MOSSY_NETHER_BRICK_STAIRS = ITEMS.register("mossy_nether_brick_stairs", () -> new BlockItem(VSBlocks.mossy_nether_brick_stairs.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ENDER_STAIRS = ITEMS.register("ender_stairs", () -> new BlockItem(VSBlocks.ender_stairs.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> END_STONE_PILLAR = ITEMS.register("end_stone_pillar", () -> new BlockItem(VSBlocks.end_stone_pillar.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> NETHER_BRICK_PILLAR = ITEMS.register("nether_brick_pillar", () -> new BlockItem(VSBlocks.nether_brick_pillar.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ELDER_PRISMARINE = ITEMS.register("elder_prismarine", () -> new BlockItem(VSBlocks.elder_prismarine.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_BRICKS = ITEMS.register("elder_prismarine_bricks", () -> new BlockItem(VSBlocks.elder_prismarine_bricks.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> dark_elder_prismarine = ITEMS.register("dark_elder_prismarine", () -> new BlockItem(VSBlocks.dark_elder_prismarine.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> elder_prismarine_stairs = ITEMS.register("elder_prismarine_stairs", () -> new BlockItem(VSBlocks.elder_prismarine_stairs.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> elder_prismarine_brick_stairs = ITEMS.register("elder_prismarine_brick_stairs", () -> new BlockItem(VSBlocks.elder_prismarine_brick_stairs.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> dark_elder_prismarine_stairs = ITEMS.register("dark_elder_prismarine_stairs", () -> new BlockItem(VSBlocks.dark_elder_prismarine_stairs.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> elder_sea_lantern = ITEMS.register("elder_sea_lantern", () -> new BlockItem(VSBlocks.elder_sea_lantern.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> ender_wart_block = ITEMS.register("ender_wart_block", () -> new BlockItem(VSBlocks.ender_wart_block.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> wither_bone_block = ITEMS.register("wither_bone_block", () -> new BlockItem(VSBlocks.wither_bone_block.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> mossy_end_stone_brick_stairs = ITEMS.register("mossy_end_stone_brick_stairs", () -> new BlockItem(VSBlocks.mossy_end_stone_brick_stairs.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));
    public static final RegistryObject<Item> mossy_purpur_stairs = ITEMS.register("mossy_purpur_stairs", () -> new BlockItem(VSBlocks.mossy_purpur_stairs.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_building_blocks)));

    // Decorations
    public static final RegistryObject<Item> painting_sapling = ITEMS.register("painting_sapling", () -> new BlockItem(VSBlocks.PAINTING_SAPLING.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> painting_leaves = ITEMS.register("painting_leaves", () -> new BlockItem(VSBlocks.PAINTING_LEAVES.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> azure_bluet_leaves = ITEMS.register("azure_bluet_leaves", () -> new BlockItem(VSBlocks.AZURE_BLUET_LEAVES.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> glow_berry_bush = ITEMS.register("glow_berry_bush", () -> new BlockItem(VSBlocks.GLOW_BERRY_BUSH.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> golden_carrots = ITEMS.register("golden_carrots", () -> new BlockItem(VSBlocks.GOLDEN_CARROTS.get(), new Item.Properties().rarity(Rarity.UNCOMMON).tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> glow_black_tulip = ITEMS.register("glow_black_tulip", () -> new BlockItem(VSBlocks.GLOW_BLACK_TULIP.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> sunny_flower = ITEMS.register("sunny_flower", () -> new BlockItem(VSBlocks.SUNNY_FLOWER.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> ender_fungus = ITEMS.register("ender_fungus", () -> new BlockItem(VSBlocks.ENDER_FUNGUS.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> ender_roots = ITEMS.register("ender_roots", () -> new BlockItem(VSBlocks.ENDER_ROOTS.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> ender_sprouts = ITEMS.register("ender_sprouts", () -> new BlockItem(VSBlocks.ENDER_SPROUTS.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> warping_vines = ITEMS.register("warping_vines", () -> new BlockItem(VSBlocks.WARPING_VINES.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> crimson_farmland = ITEMS.register("crimson_farmland", () -> new BlockItem(VSBlocks.CRIMSON_FARMLAND.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> warped_farmland = ITEMS.register("warped_farmland", () -> new BlockItem(VSBlocks.WARPED_FARMLAND.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> ender_farmland = ITEMS.register("ender_farmland", () -> new BlockItem(VSBlocks.ENDER_FARMLAND.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> quartz_ladder = ITEMS.register("quartz_ladder", () -> new BlockItem(VSBlocks.QUARTZ_LADDER.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> painting_fence = ITEMS.register("painting_fence", () -> new BlockItem(VSBlocks.painting_fence.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> ender_fence = ITEMS.register("ender_fence", () -> new BlockItem(VSBlocks.ender_fence.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> quartz_bars = ITEMS.register("quartz_bars", () -> new BlockItem(VSBlocks.QUARTZ_BARS.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> quartz_chain = ITEMS.register("quartz_chain", () -> new BlockItem(VSBlocks.QUARTZ_CHAIN.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> emerald_chain = ITEMS.register("emerald_chain", () -> new BlockItem(VSBlocks.EMERALD_CHAIN.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> diamond_chain = ITEMS.register("diamond_chain", () -> new BlockItem(VSBlocks.DIAMOND_CHAIN.get(), new Item.Properties().rarity(Rarity.RARE).tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> red_nether_brick_fence = ITEMS.register("red_nether_brick_fence", () -> new BlockItem(VSBlocks.red_nether_brick_fence.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> elder_prismarine_wall = ITEMS.register("elder_prismarine_wall", () -> new BlockItem(VSBlocks.elder_prismarine_wall.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> glow_black_carpet = ITEMS.register("glow_black_carpet", () -> new BlockItem(VSBlocks.glow_black_carpet.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> quartz_glass_pane = ITEMS.register("quartz_glass_pane", () -> new BlockItem(VSBlocks.QUARTZ_GLASS_PANE.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> potted_sugar_cane = ITEMS.register("potted_sugar_cane", () -> new BlockItem(VSBlocks.POTTED_SUGAR_CANE.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> potted_glow_black_tulip = ITEMS.register("potted_glow_black_tulip", () -> new BlockItem(VSBlocks.POTTED_GLOW_BLACK_TULIP.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> potted_sunny_flower = ITEMS.register("potted_sunny_flower", () -> new BlockItem(VSBlocks.POTTED_SUNNY_FLOWER.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> potted_torch = ITEMS.register("potted_torch", () -> new BlockItem(VSBlocks.POTTED_TORCH.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> potted_soul_torch = ITEMS.register("potted_soul_torch", () -> new BlockItem(VSBlocks.POTTED_SOUL_TORCH.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> potted_golden_carrots = ITEMS.register("potted_golden_carrots", () -> new BlockItem(VSBlocks.POTTED_GOLDEN_CARROTS.get(), new Item.Properties().rarity(Rarity.UNCOMMON).tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> potted_warped_wart = ITEMS.register("potted_warped_wart", () -> new BlockItem(VSBlocks.POTTED_WARPED_WART.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_decorations)));
    public static final RegistryObject<Item> diamond_bell = ITEMS.register("diamond_bell", () -> new BlockItem(VSBlocks.DIAMOND_BELL.get(), new Item.Properties().rarity(Rarity.RARE).tab(Variants.CreativeTabs.variant_decorations)));

    // Redstone
    public static final RegistryObject<Item> netherrack_lever = ITEMS.register("netherrack_lever", () -> new BlockItem(VSBlocks.netherrack_lever.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> end_stone_lever = ITEMS.register("end_stone_lever", () -> new BlockItem(VSBlocks.end_stone_lever.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> painting_pressure_plate = ITEMS.register("painting_pressure_plate", () -> new BlockItem(VSBlocks.painting_pressure_plate.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> painting_trapdoor = ITEMS.register("painting_trapdoor", () -> new BlockItem(VSBlocks.PAINTING_TRAPDOOR.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> alban_trapdoor = ITEMS.register("alban_trapdoor", () -> new BlockItem(VSBlocks.alban_trapdoor.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> aztec_trapdoor = ITEMS.register("aztec_trapdoor", () -> new BlockItem(VSBlocks.aztec_trapdoor.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> aztec2_trapdoor = ITEMS.register("aztec2_trapdoor", () -> new BlockItem(VSBlocks.aztec2_trapdoor.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> bomb_trapdoor = ITEMS.register("bomb_trapdoor", () -> new BlockItem(VSBlocks.bomb_trapdoor.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> kebab_trapdoor = ITEMS.register("kebab_trapdoor", () -> new BlockItem(VSBlocks.kebab_trapdoor.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> plant_trapdoor = ITEMS.register("plant_trapdoor", () -> new BlockItem(VSBlocks.plant_trapdoor.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> wasteland_trapdoor = ITEMS.register("wasteland_trapdoor", () -> new BlockItem(VSBlocks.wasteland_trapdoor.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> ender_trapdoor = ITEMS.register("ender_trapdoor", () -> new BlockItem(VSBlocks.ENDER_TRAPDOOR.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> painting_fence_gate = ITEMS.register("painting_fence_gate", () -> new BlockItem(VSBlocks.painting_fence_gate.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> ender_fence_gate = ITEMS.register("ender_fence_gate", () -> new BlockItem(VSBlocks.ender_fence_gate.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> painting_button = ITEMS.register("painting_button", () -> new BlockItem(VSBlocks.painting_button.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> painting_door = ITEMS.register("painting_door", () -> new BlockItem(VSBlocks.PAINTING_DOOR.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> WANDERER_DOOR = ITEMS.register("wanderer_door", () -> new BlockItem(VSBlocks.wanderer_door.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> graham_door = ITEMS.register("graham_door", () -> new BlockItem(VSBlocks.graham_door.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> oak_trapdoor_door = ITEMS.register("oak_trapdoor_door", () -> new BlockItem(VSBlocks.OAK_TRAPDOOR_DOOR.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> acacia_trapdoor_door = ITEMS.register("acacia_trapdoor_door", () -> new BlockItem(VSBlocks.ACACIA_TRAPDOOR_DOOR.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> dark_oak_trapdoor_door = ITEMS.register("dark_oak_trapdoor_door", () -> new BlockItem(VSBlocks.DARK_OAK_TRAPDOOR_DOOR.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> crimson_trapdoor_door = ITEMS.register("crimson_trapdoor_door", () -> new BlockItem(VSBlocks.CRIMSON_TRAPDOOR_DOOR.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> ender_door = ITEMS.register("ender_door", () -> new BlockItem(VSBlocks.ENDER_DOOR.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> CRYSTALLIZED_MAGMA_CREAM_ORE = ITEMS.register("crystallized_magma_cream_ore", () -> new BlockItem(VSBlocks.CRYSTALLIZED_MAGMA_CREAM_ORE.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_redstone)));
    public static final RegistryObject<Item> redstone_pot = ITEMS.register("redstone_pot", () -> new Item(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_redstone)));

    // Transportation
    public static final RegistryObject<Item> wooden_railbed = ITEMS.register("wooden_railbed", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_transportation)));
    public static final RegistryObject<Item> powered_railbed = ITEMS.register("powered_railbed", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_transportation)));
    public static final RegistryObject<Item> iron_tie = ITEMS.register("iron_tie", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_transportation)));
    public static final RegistryObject<Item> powered_tie = ITEMS.register("powered_tie", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_transportation)));
    public static final RegistryObject<Item> detector_plate = ITEMS.register("detector_plate", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_transportation)));
    public static final RegistryObject<Item> corner_iron_tie = ITEMS.register("corner_iron_tie", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_transportation)));
    public static final RegistryObject<Item> spawner_minecart = ITEMS.register("spawner_minecart", () -> new MinecartItem(AbstractMinecart.Type.SPAWNER, new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_transportation)));
  //public static final RegistryObject<Item> soul_carrot_on_a_stick = items.register("soul_carrot_on_a_stick", () -> new OnAStickItem<>(new Item.Properties().stacksTo(1).durability(25).tab(Variants.CreativeTabs.variant_transportation), EntityInit.pornhey.get(), 7));
    public static final RegistryObject<Item> painting_boat = ITEMS.register("painting_boat", () -> new Item(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_transportation)));
    public static final RegistryObject<Item> crimson_boat = ITEMS.register("crimson_boat", () -> new Item(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_transportation)));
    public static final RegistryObject<Item> warped_boat = ITEMS.register("warped_boat", () -> new Item(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_transportation)));

    // Misc
    public static final RegistryObject<Item> gold_beacon = ITEMS.register("gold_beacon", () -> new BlockItem(VSBlocks.GOLD_BEACON.get(), new Item.Properties().rarity(Rarity.UNCOMMON).tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> quartz_beacon = ITEMS.register("quartz_beacon", () -> new BlockItem(VSBlocks.QUARTZ_BEACON.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> exposed_copper_ingot = ITEMS.register("exposed_copper_ingot", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> weathered_copper_ingot = ITEMS.register("weathered_copper_ingot", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> oxidized_copper_ingot = ITEMS.register("oxidized_copper_ingot", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> raw_debris = ITEMS.register("raw_debris", () -> new Item(new Item.Properties().fireResistant().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> oak_stick = ITEMS.register("oak_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> spruce_stick = ITEMS.register("spruce_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> birch_stick = ITEMS.register("birch_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> jungle_stick = ITEMS.register("jungle_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> acacia_stick = ITEMS.register("acacia_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> dark_oak_stick = ITEMS.register("dark_oak_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> painting_stick = ITEMS.register("painting_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> crimson_stick = ITEMS.register("crimson_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> warped_stick = ITEMS.register("warped_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> ender_stick = ITEMS.register("ender_stick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> netherite_rod = ITEMS.register("netherite_rod", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc).fireResistant()));
    public static final RegistryObject<Item> OAK_BOWL = ITEMS.register("oak_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> SPRUCE_BOWL = ITEMS.register("spruce_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> BIRCH_BOWL = ITEMS.register("birch_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> JUNGLE_BOWL = ITEMS.register("jungle_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> ACACIA_BOWL = ITEMS.register("acacia_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> DARK_OAK_BOWL = ITEMS.register("dark_oak_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> PAINTING_BOWL = ITEMS.register("painting_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> CRIMSON_BOWL = ITEMS.register("crimson_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> WARPED_BOWL = ITEMS.register("warped_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> ENDER_BOWL = ITEMS.register("ender_bowl", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> gunpowder_pot = ITEMS.register("gunpowder_pot", () -> new Item(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> CRIMSON_WHEAT_SEEDS = ITEMS.register("crimson_wheat_seeds", () -> new ItemNameBlockItem(VSBlocks.CRIMSON_WHEAT.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> crimson_wheat = ITEMS.register("crimson_wheat", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> soul_lava_bucket = ITEMS.register("soul_lava_bucket", () -> new BucketItem(VSFluids.SOUL_LAVA, new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    //public static final RegistryObject<Item> old_cod_bucket = items.register("old_cod_bucket", () -> new MobBucketItem(EntityInit.old_cod, () -> Fluids.WATER, () -> SoundEvents.BUCKET_EMPTY_FISH, new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> enchanted_knowledge_book = ITEMS.register("enchanted_knowledge_book", () -> new KnowledgeBookItem(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> CRYSTALLIZED_MAGMA_CREAM = ITEMS.register("crystallized_magma_cream", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> GELATINOUS_MAGMA_CREAM = ITEMS.register("gelatinous_magma_cream", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> red_nether_brick = ITEMS.register("red_nether_brick", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> glow_black_dye = ITEMS.register("glow_black_dye", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> wither_bone_meal = ITEMS.register("wither_bone_meal", () -> new BoneMealItem(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> wither_bone = ITEMS.register("wither_bone", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> sugar_pot = ITEMS.register("sugar_pot", () -> new Item(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> soul_rod = ITEMS.register("soul_rod", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> diamond_nugget = ITEMS.register("diamond_nugget", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> emerald_nugget = ITEMS.register("emerald_nugget", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> WARPED_WART = ITEMS.register("warped_wart", () -> new ItemNameBlockItem(VSBlocks.WARPED_WART.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> soul_charge = ITEMS.register("soul_charge", () -> new FireChargeItem(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> splash_experience_bottle = ITEMS.register("splash_experience_bottle", () -> new ExperienceBottleItem(new Item.Properties().rarity(Rarity.UNCOMMON).tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> lingering_experience_bottle = ITEMS.register("lingering_experience_bottle", () -> new ExperienceBottleItem(new Item.Properties().rarity(Rarity.UNCOMMON).tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> elder_prismarine_shard = ITEMS.register("elder_prismarine_shard", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> elder_prismarine_crystals = ITEMS.register("elder_prismarine_crystals", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> quartz_horse_armor = ITEMS.register("quartz_horse_armor", () -> new HorseArmorItem(8, QUARTZ_HORSE_ARMOR_LOCATION, new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> white_shulker_shell = ITEMS.register("white_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> orange_shulker_shell = ITEMS.register("orange_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> magenta_shulker_shell = ITEMS.register("magenta_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> light_blue_shulker_shell = ITEMS.register("light_blue_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> glow_black_shulker_shell = ITEMS.register("glow_black_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> yellow_shulker_shell = ITEMS.register("yellow_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> lime_shulker_shell = ITEMS.register("lime_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> pink_shulker_shell = ITEMS.register("pink_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> gray_shulker_shell = ITEMS.register("gray_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> light_gray_shulker_shell = ITEMS.register("light_gray_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> CYAN_SHULKER_SHELL = ITEMS.register("cyan_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> purple_shulker_shell = ITEMS.register("purple_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> blue_shulker_shell = ITEMS.register("blue_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> brown_shulker_shell = ITEMS.register("brown_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> green_shulker_shell = ITEMS.register("green_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> red_shulker_shell = ITEMS.register("red_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> black_shulker_shell = ITEMS.register("black_shulker_shell", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> quartz_nugget = ITEMS.register("quartz_nugget", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> music_disc_dog = ITEMS.register("music_disc_dog", () -> new RecordItem(5, () -> VSSounds.MUSIC_DISC_DOG, new Item.Properties().stacksTo(1).rarity(Rarity.RARE).tab(Variants.CreativeTabs.variant_misc)));
    public static final RegistryObject<Item> crystallized_honey = ITEMS.register("crystallized_honey", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_misc)));

    // Food
    public static final RegistryObject<Item> fungi_stew = ITEMS.register("fungi_stew", () -> new BowlFoodItem(new Item.Properties().tab(Variants.CreativeTabs.variant_food).stacksTo(1).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> oak_fungi_stew = ITEMS.register("oak_fungi_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> spruce_fungi_stew = ITEMS.register("spruce_fungi_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> birch_fungi_stew = ITEMS.register("birch_fungi_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> jungle_fungi_stew = ITEMS.register("jungle_fungi_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> acacia_fungi_stew = ITEMS.register("acacia_fungi_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> dark_oak_fungi_stew = ITEMS.register("dark_oak_fungi_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> painting_fungi_stew = ITEMS.register("painting_fungi_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> crimson_fungi_stew = ITEMS.register("crimson_fungi_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> warped_fungi_stew = ITEMS.register("warped_fungi_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> ender_fungi_stew = ITEMS.register("ender_fungi_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> end_fungi_stew = ITEMS.register("end_fungi_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> oak_end_fungi_stew = ITEMS.register("oak_end_fungi_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> spruce_end_fungi_stew = ITEMS.register("spruce_end_fungi_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> birch_end_fungi_stew = ITEMS.register("birch_end_fungi_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> jungle_end_fungi_stew = ITEMS.register("jungle_end_fungi_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> acacia_end_fungi_stew = ITEMS.register("acacia_end_fungi_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> dark_oak_end_fungi_stew = ITEMS.register("dark_oak_end_fungi_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> painting_end_fungi_stew = ITEMS.register("painting_end_fungi_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> crimson_end_fungi_stew = ITEMS.register("crimson_end_fungi_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> warped_end_fungi_stew = ITEMS.register("warped_end_fungi_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> ender_end_fungi_stew = ITEMS.register("ender_end_fungi_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> oak_mushroom_stew = ITEMS.register("oak_mushroom_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> spruce_mushroom_stew = ITEMS.register("spruce_mushroom_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> birch_mushroom_stew = ITEMS.register("birch_mushroom_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> jungle_mushroom_stew = ITEMS.register("jungle_mushroom_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> acacia_mushroom_stew = ITEMS.register("acacia_mushroom_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> dark_oak_mushroom_stew = ITEMS.register("dark_oak_mushroom_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> painting_mushroom_stew = ITEMS.register("painting_mushroom_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> crimson_mushroom_stew = ITEMS.register("crimson_mushroom_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> warped_mushroom_stew = ITEMS.register("warped_mushroom_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> ender_mushroom_stew = ITEMS.register("ender_mushroom_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> oak_suspicious_stew = ITEMS.register("oak_suspicious_stew", () -> new CustomSuspiciousSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> spruce_suspicious_stew = ITEMS.register("spruce_suspicious_stew", () -> new CustomSuspiciousSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> birch_suspicious_stew = ITEMS.register("birch_suspicious_stew", () -> new CustomSuspiciousSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> jungle_suspicious_stew = ITEMS.register("jungle_suspicious_stew", () -> new CustomSuspiciousSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> acacia_suspicious_stew = ITEMS.register("acacia_suspicious_stew", () -> new CustomSuspiciousSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> dark_oak_suspicious_stew = ITEMS.register("dark_oak_suspicious_stew", () -> new CustomSuspiciousSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> painting_suspicious_stew = ITEMS.register("painting_suspicious_stew", () -> new CustomSuspiciousSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> crimson_suspicious_stew = ITEMS.register("crimson_suspicious_stew", () -> new CustomSuspiciousSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> warped_suspicious_stew = ITEMS.register("warped_suspicious_stew", () -> new CustomSuspiciousSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> ender_suspicious_stew = ITEMS.register("ender_suspicious_stew", () -> new CustomSuspiciousSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> crimson_bread = ITEMS.register("crimson_bread", () -> new Item(new Item.Properties().food(Foods.BREAD).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> old_cod = ITEMS.register("old_cod", () -> new Item(new Item.Properties().food(Foods.COD).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> old_cooked_cod = ITEMS.register("old_cooked_cod", () -> new Item(new Item.Properties().food(Foods.COOKED_COD).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> SOUL_CARROT = ITEMS.register("soul_carrot", () -> new ItemNameBlockItem(VSBlocks.SOUL_CARROTS.get(), new Item.Properties().food(Foods.CARROT).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> WARPED_POTATO = ITEMS.register("warped_potato", () -> new ItemNameBlockItem(VSBlocks.WARPED_POTATOES.get(), new Item.Properties().food(Foods.POTATO).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> baked_warped_potato = ITEMS.register("baked_warped_potato", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> withered_warped_potato = ITEMS.register("withered_warped_potato", () -> new Item(new Item.Properties().food(new FoodProperties.Builder().nutrition(2).saturationMod(0.3F).effect(() -> new MobEffectInstance(MobEffects.WITHER, 100, 0), 0.6F).build()).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> mushroom_stew_bucket = ITEMS.register("mushroom_stew_bucket", () -> new StewBucketItem(VSFluids.MUSHROOM_STEW, new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> beetroot_soup_bucket = ITEMS.register("beetroot_soup_bucket", () -> new StewBucketItemOld(new Item.Properties().stacksTo(1).food(Foods.BEETROOT_SOUP).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> rabbit_stew_bucket = ITEMS.register("rabbit_stew_bucket", () -> new StewBucketItemOld(new Item.Properties().stacksTo(1).food(Foods.RABBIT_STEW).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> fungi_stew_bucket = ITEMS.register("fungi_stew_bucket", () -> new StewBucketItemOld(new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> end_fungi_stew_bucket = ITEMS.register("end_fungi_stew_bucket", () -> new StewBucketItemOld(new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> oak_rabbit_stew = ITEMS.register("oak_rabbit_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> spruce_rabbit_stew = ITEMS.register("spruce_rabbit_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> birch_rabbit_stew = ITEMS.register("birch_rabbit_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> jungle_rabbit_stew = ITEMS.register("jungle_rabbit_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> acacia_rabbit_stew = ITEMS.register("acacia_rabbit_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> dark_oak_rabbit_stew = ITEMS.register("dark_oak_rabbit_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> painting_rabbit_stew = ITEMS.register("painting_rabbit_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> crimson_rabbit_stew = ITEMS.register("crimson_rabbit_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> warped_rabbit_stew = ITEMS.register("warped_rabbit_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> ender_rabbit_stew = ITEMS.register("ender_rabbit_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> oak_beetroot_soup = ITEMS.register("oak_beetroot_soup", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> spruce_beetroot_soup = ITEMS.register("spruce_beetroot_soup", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> birch_beetroot_soup = ITEMS.register("birch_beetroot_soup", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> jungle_beetroot_soup = ITEMS.register("jungle_beetroot_soup", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> acacia_beetroot_soup = ITEMS.register("acacia_beetroot_soup", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> dark_oak_beetroot_soup = ITEMS.register("dark_oak_beetroot_soup", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> painting_beetroot_soup = ITEMS.register("painting_beetroot_soup", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> crimson_beetroot_soup = ITEMS.register("crimson_beetroot_soup", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> warped_beetroot_soup = ITEMS.register("warped_beetroot_soup", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> ender_beetroot_soup = ITEMS.register("ender_beetroot_soup", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> sweet_berry_pot = ITEMS.register("sweet_berry_pot", () -> new BerryPotItem(new Item.Properties().food(Foods.APPLE).stacksTo(8).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> glow_berry_pot = ITEMS.register("glow_berry_pot", () -> new BerryPotItem(new Item.Properties().food(Foods.APPLE).stacksTo(8).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> honey_ball = ITEMS.register("honey_ball", () -> new HoneyBallItem(new Item.Properties().food(Foods.HONEY_BOTTLE).tab(Variants.CreativeTabs.variant_food)));
    public static final RegistryObject<Item> oak_water_stew = ITEMS.register("oak_water_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> spruce_water_stew = ITEMS.register("spruce_water_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> birch_water_stew = ITEMS.register("birch_water_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> jungle_water_stew = ITEMS.register("jungle_water_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> acacia_water_stew = ITEMS.register("acacia_water_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> dark_oak_water_stew = ITEMS.register("dark_oak_water_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> painting_water_stew = ITEMS.register("painting_water_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> crimson_water_stew = ITEMS.register("crimson_water_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> warped_water_stew = ITEMS.register("warped_water_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> ender_water_stew = ITEMS.register("ender_water_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> oak_lava_stew = ITEMS.register("oak_lava_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> spruce_lava_stew = ITEMS.register("spruce_lava_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> birch_lava_stew = ITEMS.register("birch_lava_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> jungle_lava_stew = ITEMS.register("jungle_lava_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> acacia_lava_stew = ITEMS.register("acacia_lava_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> dark_oak_lava_stew = ITEMS.register("dark_oak_lava_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> painting_lava_stew = ITEMS.register("painting_lava_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> crimson_lava_stew = ITEMS.register("crimson_lava_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> warped_lava_stew = ITEMS.register("warped_lava_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> ender_lava_stew = ITEMS.register("ender_lava_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> oak_milk_stew = ITEMS.register("oak_milk_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> spruce_milk_stew = ITEMS.register("spruce_milk_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> birch_milk_stew = ITEMS.register("birch_milk_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> jungle_milk_stew = ITEMS.register("jungle_milk_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> acacia_milk_stew = ITEMS.register("acacia_milk_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> dark_oak_milk_stew = ITEMS.register("dark_oak_milk_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> painting_milk_stew = ITEMS.register("painting_milk_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> crimson_milk_stew = ITEMS.register("crimson_milk_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> warped_milk_stew = ITEMS.register("warped_milk_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> ender_milk_stew = ITEMS.register("ender_milk_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> oak_powder_snow_stew = ITEMS.register("oak_powder_snow_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));
    public static final RegistryObject<Item> spruce_powder_snow_stew = ITEMS.register("spruce_powder_snow_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));
    public static final RegistryObject<Item> birch_powder_snow_stew = ITEMS.register("birch_powder_snow_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));
    public static final RegistryObject<Item> jungle_powder_snow_stew = ITEMS.register("jungle_powder_snow_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));
    public static final RegistryObject<Item> acacia_powder_snow_stew = ITEMS.register("acacia_powder_snow_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));
    public static final RegistryObject<Item> dark_oak_powder_snow_stew = ITEMS.register("dark_oak_powder_snow_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));
    public static final RegistryObject<Item> painting_powder_snow_stew = ITEMS.register("painting_powder_snow_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));
    public static final RegistryObject<Item> crimson_powder_snow_stew = ITEMS.register("crimson_powder_snow_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));
    public static final RegistryObject<Item> warped_powder_snow_stew = ITEMS.register("warped_powder_snow_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));
    public static final RegistryObject<Item> ender_powder_snow_stew = ITEMS.register("ender_powder_snow_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.CreativeTabs.variant_food).food(Foods.APPLE)));

    // Brewing
    public static final RegistryObject<Item> milk_glass_bottle = ITEMS.register("milk_glass_bottle", () -> new MilkBottleItem(new Item.Properties().stacksTo(8).tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> lava_glass_bottle = ITEMS.register("lava_glass_bottle", () -> new LavaBottleItem(new Item.Properties().stacksTo(8).tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> powder_snow_bottle = ITEMS.register("powder_snow_bottle", () -> new Item(new Item.Properties().stacksTo(8).tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> glowstone_pot = ITEMS.register("glowstone_pot", () -> new Item(new Item.Properties().stacksTo(1).food(VariantFoods.GLOWSTONE_POT).tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> splash_glass_bottle = ITEMS.register("splash_glass_bottle", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> lingering_glass_bottle = ITEMS.register("lingering_glass_bottle", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> STYLISED_POT = ITEMS.register("stylised_pot", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> soul_powder = ITEMS.register("soul_powder", () -> new Item(new Item.Properties().tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> soul_brewing_stand = ITEMS.register("soul_brewing_stand", () -> new BlockItem(VSBlocks.SOUL_BREWING_STAND.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> gold_cauldron = ITEMS.register("gold_cauldron", () -> new BlockItem(VSBlocks.GOLD_CAULDRON.get(), new Item.Properties().rarity(Rarity.UNCOMMON).tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> quartz_cauldron = ITEMS.register("quartz_cauldron", () -> new BlockItem(VSBlocks.QUARTZ_CAULDRON.get(), new Item.Properties().tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> splash_dragon_breath = ITEMS.register("splash_dragon_breath", () -> new Item(new Item.Properties().craftRemainder(Items.SPLASH_POTION).rarity(Rarity.UNCOMMON).tab(Variants.CreativeTabs.variant_brewing)));
    public static final RegistryObject<Item> lingering_dragon_breath = ITEMS.register("lingering_dragon_breath", () -> new Item(new Item.Properties().craftRemainder(Items.LINGERING_POTION).rarity(Rarity.UNCOMMON).tab(Variants.CreativeTabs.variant_brewing)));

}
