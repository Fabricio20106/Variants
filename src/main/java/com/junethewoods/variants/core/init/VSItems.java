package com.junethewoods.variants.core.init;

import com.junethewoods.variants.core.Variants;
import com.junethewoods.variants.core.sound.VSSounds;
import com.junethewoods.variants.common.item.*;
import com.junethewoods.variants.core.tabs.VSBlocksTab;
import com.junethewoods.variants.core.tabs.VSTab;
import net.minecraft.world.effect.MobEffectInstance;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.entity.vehicle.AbstractMinecart;
import net.minecraft.world.food.FoodProperties;
import net.minecraft.world.food.Foods;
import net.minecraft.world.item.*;
import net.minecraftforge.registries.DeferredRegister;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.RegistryObject;

public class VSItems {
    public static final DeferredRegister<Item> ITEMS = DeferredRegister.create(ForgeRegistries.ITEMS, Variants.MOD_ID);

    // Variants Blocks
    // Painting wood
    public static final RegistryObject<Item> PAINTING_LOG = ITEMS.register("painting_log", () -> new BlockItem(VSBlocks.PAINTING_LOG.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_WOOD = ITEMS.register("painting_wood", () -> new BlockItem(VSBlocks.PAINTING_WOOD.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> STRIPPED_PAINTING_LOG = ITEMS.register("stripped_painting_log", () -> new BlockItem(VSBlocks.STRIPPED_PAINTING_LOG.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> STRIPPED_PAINTING_WOOD = ITEMS.register("stripped_painting_wood", () -> new BlockItem(VSBlocks.STRIPPED_PAINTING_WOOD.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_PLANKS = ITEMS.register("painting_planks", () -> new BlockItem(VSBlocks.PAINTING_PLANKS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_STAIRS = ITEMS.register("painting_stairs", () -> new BlockItem(VSBlocks.PAINTING_STAIRS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_SLAB = ITEMS.register("painting_slab", () -> new BlockItem(VSBlocks.PAINTING_SLAB.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_FENCE = ITEMS.register("painting_fence", () -> new BlockItem(VSBlocks.PAINTING_FENCE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_FENCE_GATE = ITEMS.register("painting_fence_gate", () -> new BlockItem(VSBlocks.PAINTING_FENCE_GATE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_DOOR = ITEMS.register("painting_door", () -> new BlockItem(VSBlocks.PAINTING_DOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> WANDERER_DOOR = ITEMS.register("wanderer_door", () -> new BlockItem(VSBlocks.WANDERER_DOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> GRAHAM_DOOR = ITEMS.register("graham_door", () -> new BlockItem(VSBlocks.GRAHAM_DOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_TRAPDOOR = ITEMS.register("painting_trapdoor", () -> new BlockItem(VSBlocks.PAINTING_TRAPDOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ALBAN_TRAPDOOR = ITEMS.register("alban_trapdoor", () -> new BlockItem(VSBlocks.ALBAN_TRAPDOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> AZTEC_TRAPDOOR = ITEMS.register("aztec_trapdoor", () -> new BlockItem(VSBlocks.AZTEC_TRAPDOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> AZTEC2_TRAPDOOR = ITEMS.register("aztec2_trapdoor", () -> new BlockItem(VSBlocks.AZTEC2_TRAPDOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> BOMB_TRAPDOOR = ITEMS.register("bomb_trapdoor", () -> new BlockItem(VSBlocks.BOMB_TRAPDOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> KEBAB_TRAPDOOR = ITEMS.register("kebab_trapdoor", () -> new BlockItem(VSBlocks.KEBAB_TRAPDOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PLANT_TRAPDOOR = ITEMS.register("plant_trapdoor", () -> new BlockItem(VSBlocks.PLANT_TRAPDOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> WASTELAND_TRAPDOOR = ITEMS.register("wasteland_trapdoor", () -> new BlockItem(VSBlocks.WASTELAND_TRAPDOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_PRESSURE_PLATE = ITEMS.register("painting_pressure_plate", () -> new BlockItem(VSBlocks.PAINTING_PRESSURE_PLATE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_BUTTON = ITEMS.register("painting_button", () -> new BlockItem(VSBlocks.PAINTING_BUTTON.get(), new Item.Properties().tab(VSBlocksTab.TAB)));

    // Ender wood
    public static final RegistryObject<Item> ENDER_STEM = ITEMS.register("ender_stem", () -> new BlockItem(VSBlocks.ENDER_STEM.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_HYPHAE = ITEMS.register("ender_hyphae", () -> new BlockItem(VSBlocks.ENDER_HYPHAE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> STRIPPED_ENDER_STEM = ITEMS.register("stripped_ender_stem", () -> new BlockItem(VSBlocks.STRIPPED_ENDER_STEM.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> STRIPPED_ENDER_HYPHAE = ITEMS.register("stripped_ender_hyphae", () -> new BlockItem(VSBlocks.STRIPPED_ENDER_HYPHAE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_PLANKS = ITEMS.register("ender_planks", () -> new BlockItem(VSBlocks.ENDER_PLANKS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_BOOKSHELF = ITEMS.register("ender_bookshelf", () -> new BlockItem(VSBlocks.ENDER_BOOKSHELF.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_STAIRS = ITEMS.register("ender_stairs", () -> new BlockItem(VSBlocks.ENDER_STAIRS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_SLAB = ITEMS.register("ender_slab", () -> new BlockItem(VSBlocks.ENDER_SLAB.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_FENCE = ITEMS.register("ender_fence", () -> new BlockItem(VSBlocks.ENDER_FENCE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_FENCE_GATE = ITEMS.register("ender_fence_gate", () -> new BlockItem(VSBlocks.ENDER_FENCE_GATE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_DOOR = ITEMS.register("ender_door", () -> new BlockItem(VSBlocks.ENDER_DOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_TRAPDOOR = ITEMS.register("ender_trapdoor", () -> new BlockItem(VSBlocks.ENDER_TRAPDOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));

    // Trapdoor doors
    public static final RegistryObject<Item> OAK_TRAPDOOR_DOOR = ITEMS.register("oak_trapdoor_door", () -> new BlockItem(VSBlocks.OAK_TRAPDOOR_DOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ACACIA_TRAPDOOR_DOOR = ITEMS.register("acacia_trapdoor_door", () -> new BlockItem(VSBlocks.ACACIA_TRAPDOOR_DOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> DARK_OAK_TRAPDOOR_DOOR = ITEMS.register("dark_oak_trapdoor_door", () -> new BlockItem(VSBlocks.DARK_OAK_TRAPDOOR_DOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> CRIMSON_TRAPDOOR_DOOR = ITEMS.register("crimson_trapdoor_door", () -> new BlockItem(VSBlocks.CRIMSON_TRAPDOOR_DOOR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));

    // Stone related blocks
    public static final RegistryObject<Item> ELDER_SEA_LANTERN = ITEMS.register("elder_sea_lantern", () -> new BlockItem(VSBlocks.ELDER_SEA_LANTERN.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ELDER_PRISMARINE = ITEMS.register("elder_prismarine", () -> new BlockItem(VSBlocks.ELDER_PRISMARINE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_STAIRS = ITEMS.register("elder_prismarine_stairs", () -> new BlockItem(VSBlocks.ELDER_PRISMARINE_STAIRS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_SLAB = ITEMS.register("elder_prismarine_slab", () -> new BlockItem(VSBlocks.ELDER_PRISMARINE_SLAB.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_WALL = ITEMS.register("elder_prismarine_wall", () -> new BlockItem(VSBlocks.ELDER_PRISMARINE_WALL.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_BRICKS = ITEMS.register("elder_prismarine_bricks", () -> new BlockItem(VSBlocks.ELDER_PRISMARINE_BRICKS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_BRICK_STAIRS = ITEMS.register("elder_prismarine_brick_stairs", () -> new BlockItem(VSBlocks.ELDER_PRISMARINE_BRICK_STAIRS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_BRICK_SLAB = ITEMS.register("elder_prismarine_brick_slab", () -> new BlockItem(VSBlocks.ELDER_PRISMARINE_BRICK_SLAB.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> DARK_ELDER_PRISMARINE = ITEMS.register("dark_elder_prismarine", () -> new BlockItem(VSBlocks.DARK_ELDER_PRISMARINE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> DARK_ELDER_PRISMARINE_STAIRS = ITEMS.register("dark_elder_prismarine_stairs", () -> new BlockItem(VSBlocks.DARK_ELDER_PRISMARINE_STAIRS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> DARK_ELDER_PRISMARINE_SLAB = ITEMS.register("dark_elder_prismarine_slab", () -> new BlockItem(VSBlocks.DARK_ELDER_PRISMARINE_SLAB.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> NETHER_BRICK_PILLAR = ITEMS.register("nether_brick_pillar", () -> new BlockItem(VSBlocks.NETHER_BRICK_PILLAR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> MOSSY_NETHER_BRICKS = ITEMS.register("mossy_nether_bricks", () -> new BlockItem(VSBlocks.MOSSY_NETHER_BRICKS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> MOSSY_NETHER_BRICK_STAIRS = ITEMS.register("mossy_nether_brick_stairs", () -> new BlockItem(VSBlocks.MOSSY_NETHER_BRICK_STAIRS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> MOSSY_NETHER_BRICK_SLAB = ITEMS.register("mossy_nether_brick_slab", () -> new BlockItem(VSBlocks.MOSSY_NETHER_BRICK_SLAB.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> RED_NETHER_BRICK_FENCE = ITEMS.register("red_nether_brick_fence", () -> new BlockItem(VSBlocks.RED_NETHER_BRICK_FENCE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> NETHERRACK_LEVER = ITEMS.register("netherrack_lever", () -> new BlockItem(VSBlocks.NETHERRACK_LEVER.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> END_STONE_PILLAR = ITEMS.register("end_stone_pillar", () -> new BlockItem(VSBlocks.END_STONE_PILLAR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> CHISELED_END_STONE_BRICKS = ITEMS.register("chiseled_end_stone_bricks", () -> new BlockItem(VSBlocks.CHISELED_END_STONE_BRICKS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> MOSSY_END_STONE_BRICKS = ITEMS.register("mossy_end_stone_bricks", () -> new BlockItem(VSBlocks.MOSSY_END_STONE_BRICKS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> MOSSY_END_STONE_BRICK_STAIRS = ITEMS.register("mossy_end_stone_brick_stairs", () -> new BlockItem(VSBlocks.MOSSY_END_STONE_BRICK_STAIRS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> MOSSY_END_STONE_BRICK_SLAB = ITEMS.register("mossy_end_stone_brick_slab", () -> new BlockItem(VSBlocks.MOSSY_END_STONE_BRICK_SLAB.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> END_STONE_LEVER = ITEMS.register("end_stone_lever", () -> new BlockItem(VSBlocks.END_STONE_LEVER.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> CHISELED_PURPUR_BLOCK = ITEMS.register("chiseled_purpur_block", () -> new BlockItem(VSBlocks.CHISELED_PURPUR_BLOCK.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> MOSSY_PURPUR_BLOCK = ITEMS.register("mossy_purpur_block", () -> new BlockItem(VSBlocks.MOSSY_PURPUR_BLOCK.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> MOSSY_PURPUR_STAIRS = ITEMS.register("mossy_purpur_stairs", () -> new BlockItem(VSBlocks.MOSSY_PURPUR_STAIRS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> MOSSY_PURPUR_SLAB = ITEMS.register("mossy_purpur_slab", () -> new BlockItem(VSBlocks.MOSSY_PURPUR_SLAB.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> SMOOTH_PURPUR = ITEMS.register("smooth_purpur", () -> new BlockItem(VSBlocks.SMOOTH_PURPUR.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> SMOOTH_PURPUR_SLAB = ITEMS.register("smooth_purpur_slab", () -> new BlockItem(VSBlocks.SMOOTH_PURPUR_SLAB.get(), new Item.Properties().tab(VSBlocksTab.TAB)));

    // Other things
    public static final RegistryObject<Item> GLOW_BLACK_WOOL = ITEMS.register("glow_black_wool", () -> new BlockItem(VSBlocks.GLOW_BLACK_WOOL.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> GLOW_BLACK_CARPET = ITEMS.register("glow_black_carpet", () -> new BlockItem(VSBlocks.GLOW_BLACK_CARPET.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> QUARTZ_GLASS = ITEMS.register("quartz_glass", () -> new BlockItem(VSBlocks.QUARTZ_GLASS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> QUARTZ_GLASS_PANE = ITEMS.register("quartz_glass_pane", () -> new BlockItem(VSBlocks.QUARTZ_GLASS_PANE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> WITHER_BONE_BLOCK = ITEMS.register("wither_bone_block", () -> new BlockItem(VSBlocks.WITHER_BONE_BLOCK.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> CRIMSON_FARMLAND = ITEMS.register("crimson_farmland", () -> new BlockItem(VSBlocks.CRIMSON_FARMLAND.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> WARPED_FARMLAND = ITEMS.register("warped_farmland", () -> new BlockItem(VSBlocks.WARPED_FARMLAND.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_FARMLAND = ITEMS.register("ender_farmland", () -> new BlockItem(VSBlocks.ENDER_FARMLAND.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_NYLIUM = ITEMS.register("ender_nylium", () -> new BlockItem(VSBlocks.ENDER_NYLIUM.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> QUARTZ_ORE = ITEMS.register("quartz_ore", () -> new BlockItem(VSBlocks.QUARTZ_ORE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> END_QUARTZ_ORE = ITEMS.register("end_quartz_ore", () -> new BlockItem(VSBlocks.END_QUARTZ_ORE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> NETHER_COAL_ORE = ITEMS.register("nether_coal_ore", () -> new BlockItem(VSBlocks.NETHER_COAL_ORE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> CRYSTALLIZED_MAGMA_CREAM_ORE = ITEMS.register("crystallized_magma_cream_ore", () -> new BlockItem(VSBlocks.CRYSTALLIZED_MAGMA_CREAM_ORE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> RAW_DEBRIS_BLOCK = ITEMS.register("raw_debris_block", () -> new BlockItem(VSBlocks.RAW_DEBRIS_BLOCK.get(), new Item.Properties().tab(VSBlocksTab.TAB).fireResistant()));
    public static final RegistryObject<Item> MIXER = ITEMS.register("mixer", () -> new BlockItem(VSBlocks.MIXER.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> GOLD_BEACON = ITEMS.register("gold_beacon", () -> new BlockItem(VSBlocks.GOLD_BEACON.get(), new Item.Properties().rarity(Rarity.UNCOMMON).tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> GOLD_CAULDRON = ITEMS.register("gold_cauldron", () -> new BlockItem(VSBlocks.GOLD_CAULDRON.get(), new Item.Properties().rarity(Rarity.UNCOMMON).tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> QUARTZ_BEACON = ITEMS.register("quartz_beacon", () -> new BlockItem(VSBlocks.QUARTZ_BEACON.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> QUARTZ_CAULDRON = ITEMS.register("quartz_cauldron", () -> new BlockItem(VSBlocks.QUARTZ_CAULDRON.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> QUARTZ_BARS = ITEMS.register("quartz_bars", () -> new BlockItem(VSBlocks.QUARTZ_BARS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> QUARTZ_LADDER = ITEMS.register("quartz_ladder", () -> new BlockItem(VSBlocks.QUARTZ_LADDER.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> QUARTZ_CHAIN = ITEMS.register("quartz_chain", () -> new BlockItem(VSBlocks.QUARTZ_CHAIN.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> DIAMOND_CHAIN = ITEMS.register("diamond_chain", () -> new BlockItem(VSBlocks.DIAMOND_CHAIN.get(), new Item.Properties().rarity(Rarity.RARE).tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> EMERALD_CHAIN = ITEMS.register("emerald_chain", () -> new BlockItem(VSBlocks.EMERALD_CHAIN.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> DIAMOND_BELL = ITEMS.register("diamond_bell", () -> new BlockItem(VSBlocks.DIAMOND_BELL.get(), new Item.Properties().rarity(Rarity.RARE).tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> SOUL_BREWING_STAND = ITEMS.register("soul_brewing_stand", () -> new BlockItem(VSBlocks.SOUL_BREWING_STAND.get(), new Item.Properties().tab(VSBlocksTab.TAB)));

    // Plants
    public static final RegistryObject<Item> PAINTING_LEAVES = ITEMS.register("painting_leaves", () -> new BlockItem(VSBlocks.PAINTING_LEAVES.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> AZURE_BLUET_LEAVES = ITEMS.register("azure_bluet_leaves", () -> new BlockItem(VSBlocks.AZURE_BLUET_LEAVES.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_WART_BLOCK = ITEMS.register("ender_wart_block", () -> new BlockItem(VSBlocks.ENDER_WART_BLOCK.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> PAINTING_SAPLING = ITEMS.register("painting_sapling", () -> new BlockItem(VSBlocks.PAINTING_SAPLING.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_FUNGUS = ITEMS.register("ender_fungus", () -> new BlockItem(VSBlocks.ENDER_FUNGUS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> GLOW_BERRY_BUSH = ITEMS.register("glow_berry_bush", () -> new BlockItem(VSBlocks.GLOW_BERRY_BUSH.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> GOLDEN_CARROTS = ITEMS.register("golden_carrots", () -> new BlockItem(VSBlocks.GOLDEN_CARROTS.get(), new Item.Properties().rarity(Rarity.UNCOMMON).tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> GLOW_BLACK_TULIP = ITEMS.register("glow_black_tulip", () -> new BlockItem(VSBlocks.GLOW_BLACK_TULIP.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> SUNNY_FLOWER = ITEMS.register("sunny_flower", () -> new BlockItem(VSBlocks.SUNNY_FLOWER.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_ROOTS = ITEMS.register("ender_roots", () -> new BlockItem(VSBlocks.ENDER_ROOTS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> ENDER_SPROUTS = ITEMS.register("ender_sprouts", () -> new BlockItem(VSBlocks.ENDER_SPROUTS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> WARPING_VINES = ITEMS.register("warping_vines", () -> new BlockItem(VSBlocks.WARPING_VINES.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> CRIMSON_WHEAT_SEEDS = ITEMS.register("crimson_wheat_seeds", () -> new ItemNameBlockItem(VSBlocks.CRIMSON_WHEAT.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> SOUL_CARROT = ITEMS.register("soul_carrot", () -> new ItemNameBlockItem(VSBlocks.SOUL_CARROTS.get(), new Item.Properties().food(Foods.CARROT).tab(VSBlocksTab.TAB)));
    // public static final RegistryObject<Item> SOUL_CARROT_ON_A_STICK = items.register("soul_carrot_on_a_stick", () -> new OnAStickItem<>(new Item.Properties().stacksTo(1).durability(25).tab(VSBlocksTab.TAB), EntityInit.pornhey.get(), 7));
    public static final RegistryObject<Item> WARPED_POTATO = ITEMS.register("warped_potato", () -> new ItemNameBlockItem(VSBlocks.WARPED_POTATOES.get(), new Item.Properties().food(Foods.POTATO).tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> BAKED_WARPED_POTATO = ITEMS.register("baked_warped_potato", () -> new Item(new Item.Properties().food(Foods.BAKED_POTATO).tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> WITHERED_WARPED_POTATO = ITEMS.register("withered_warped_potato", () -> new Item(new Item.Properties().food(new FoodProperties.Builder().nutrition(2).saturationMod(0.3F).effect(() -> new MobEffectInstance(MobEffects.WITHER, 100, 0), 0.6F).build()).tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> WARPED_WART = ITEMS.register("warped_wart", () -> new ItemNameBlockItem(VSBlocks.WARPED_WART.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> POTTED_GOLDEN_CARROTS = ITEMS.register("potted_golden_carrots", () -> new BlockItem(VSBlocks.POTTED_GOLDEN_CARROTS.get(), new Item.Properties().rarity(Rarity.UNCOMMON).tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> POTTED_WARPED_WART = ITEMS.register("potted_warped_wart", () -> new BlockItem(VSBlocks.POTTED_WARPED_WART.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> POTTED_GLOW_BLACK_TULIP = ITEMS.register("potted_glow_black_tulip", () -> new BlockItem(VSBlocks.POTTED_GLOW_BLACK_TULIP.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> POTTED_SUNNY_FLOWER = ITEMS.register("potted_sunny_flower", () -> new BlockItem(VSBlocks.POTTED_SUNNY_FLOWER.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> POTTED_SUGAR_CANE = ITEMS.register("potted_sugar_cane", () -> new BlockItem(VSBlocks.POTTED_SUGAR_CANE.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    // public static final RegistryObject<Item> POTTED_ENDER_ROOTS = ITEMS.register("potted_ender_roots", () -> new BlockItem(VSBlocks.POTTED_ENDER_ROOTS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    // public static final RegistryObject<Item> POTTED_ENDER_FUNGUS = ITEMS.register("potted_ender_fungus", () -> new BlockItem(VSBlocks.POTTED_ENDER_FUNGUS.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> POTTED_TORCH = ITEMS.register("potted_torch", () -> new BlockItem(VSBlocks.POTTED_TORCH.get(), new Item.Properties().tab(VSBlocksTab.TAB)));
    public static final RegistryObject<Item> POTTED_SOUL_TORCH = ITEMS.register("potted_soul_torch", () -> new BlockItem(VSBlocks.POTTED_SOUL_TORCH.get(), new Item.Properties().tab(VSBlocksTab.TAB)));

    // ------------------------------------------------- ITEMS -------------------------------------------------
    public static final RegistryObject<Item> RAW_DEBRIS = ITEMS.register("raw_debris", () -> new Item(new Item.Properties().fireResistant().tab(VSTab.TAB)));
    public static final RegistryObject<Item> EMPTY_SLOT_INGOT = ITEMS.register("empty_slot_ingot", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> EXPOSED_COPPER_INGOT = ITEMS.register("exposed_copper_ingot", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> WEATHERED_COPPER_INGOT = ITEMS.register("weathered_copper_ingot", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> OXIDIZED_COPPER_INGOT = ITEMS.register("oxidized_copper_ingot", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> RED_NETHER_BRICK = ITEMS.register("red_nether_brick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> CRYSTALLIZED_MAGMA_CREAM = ITEMS.register("crystallized_magma_cream", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> GELATINOUS_MAGMA_CREAM = ITEMS.register("gelatinous_magma_cream", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> QUARTZ_NUGGET = ITEMS.register("quartz_nugget", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> DIAMOND_NUGGET = ITEMS.register("diamond_nugget", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> EMERALD_NUGGET = ITEMS.register("emerald_nugget", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> NETHERITE_ROD = ITEMS.register("netherite_rod", () -> new Item(new Item.Properties().fireResistant().tab(VSTab.TAB)));
    public static final RegistryObject<Item> OAK_STICK = ITEMS.register("oak_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> SPRUCE_STICK = ITEMS.register("spruce_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> BIRCH_STICK = ITEMS.register("birch_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> JUNGLE_STICK = ITEMS.register("jungle_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> ACACIA_STICK = ITEMS.register("acacia_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> DARK_OAK_STICK = ITEMS.register("dark_oak_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> PAINTING_STICK = ITEMS.register("painting_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> CRIMSON_STICK = ITEMS.register("crimson_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> WARPED_STICK = ITEMS.register("warped_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> ENDER_STICK = ITEMS.register("ender_stick", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> OAK_BOWL = ITEMS.register("oak_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> SPRUCE_BOWL = ITEMS.register("spruce_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> BIRCH_BOWL = ITEMS.register("birch_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> JUNGLE_BOWL = ITEMS.register("jungle_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> ACACIA_BOWL = ITEMS.register("acacia_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> DARK_OAK_BOWL = ITEMS.register("dark_oak_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> PAINTING_BOWL = ITEMS.register("painting_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> CRIMSON_BOWL = ITEMS.register("crimson_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> WARPED_BOWL = ITEMS.register("warped_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> ENDER_BOWL = ITEMS.register("ender_bowl", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> CRIMSON_WHEAT = ITEMS.register("crimson_wheat", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> CRIMSON_BREAD = ITEMS.register("crimson_bread", () -> new Item(new Item.Properties().food(Foods.BREAD).tab(VSTab.TAB)));
    public static final RegistryObject<Item> WITHER_BONE = ITEMS.register("wither_bone", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> WITHER_BONE_MEAL = ITEMS.register("wither_bone_meal", () -> new BoneMealItem(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> SOUL_ROD = ITEMS.register("soul_rod", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> SOUL_POWDER = ITEMS.register("soul_powder", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> SOUL_CHARGE = ITEMS.register("soul_charge", () -> new FireChargeItem(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> GLOW_BLACK_DYE = ITEMS.register("glow_black_dye", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> CRYSTALLIZED_HONEY = ITEMS.register("crystallized_honey", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> ENCHANTED_KNOWLEDGE_BOOK = ITEMS.register("enchanted_knowledge_book", () -> new KnowledgeBookItem(new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    public static final RegistryObject<Item> MUSIC_DISC_DOG = ITEMS.register("music_disc_dog", () -> new RecordItem(5, () -> VSSounds.MUSIC_DISC_DOG, new Item.Properties().stacksTo(1).rarity(Rarity.RARE).tab(VSTab.TAB)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_SHARD = ITEMS.register("elder_prismarine_shard", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> ELDER_PRISMARINE_CRYSTALS = ITEMS.register("elder_prismarine_crystals", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> SOUL_LAVA_BUCKET = ITEMS.register("soul_lava_bucket", () -> new BucketItem(VSFluids.SOUL_LAVA, new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    // public static final RegistryObject<Item> FISH_BUCKET = items.register("old_cod_bucket", () -> new MobBucketItem(EntityInit.old_cod, () -> Fluids.WATER, () -> SoundEvents.BUCKET_EMPTY_FISH, new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    public static final RegistryObject<Item> MUSHROOM_STEW_BUCKET = ITEMS.register("mushroom_stew_bucket", () -> new StewBucketItem(VSFluids.MUSHROOM_STEW, new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW).tab(VSTab.TAB)));
    public static final RegistryObject<Item> BEETROOT_SOUP_BUCKET = ITEMS.register("beetroot_soup_bucket", () -> new OldStewBucketItem(new Item.Properties().stacksTo(1).food(Foods.BEETROOT_SOUP).tab(VSTab.TAB)));
    public static final RegistryObject<Item> RABBIT_STEW_BUCKET = ITEMS.register("rabbit_stew_bucket", () -> new OldStewBucketItem(new Item.Properties().stacksTo(1).food(Foods.RABBIT_STEW).tab(VSTab.TAB)));
    public static final RegistryObject<Item> FUNGI_STEW_BUCKET = ITEMS.register("fungi_stew_bucket", () -> new OldStewBucketItem(new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW).tab(VSTab.TAB)));
    public static final RegistryObject<Item> END_FUNGI_STEW_BUCKET = ITEMS.register("end_fungi_stew_bucket", () -> new OldStewBucketItem(new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW).tab(VSTab.TAB)));
    public static final RegistryObject<Item> FUNGI_STEW = ITEMS.register("fungi_stew", () -> new BowlFoodItem(new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW).tab(VSTab.TAB)));
    public static final RegistryObject<Item> END_FUNGI_STEW = ITEMS.register("end_fungi_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).food(Foods.MUSHROOM_STEW).tab(VSTab.TAB)));
    public static final RegistryObject<Item> LAVA_BOTTLE = ITEMS.register("lava_glass_bottle", () -> new LavaBottleItem(new Item.Properties().stacksTo(8).tab(VSTab.TAB)));
    public static final RegistryObject<Item> POWDER_SNOW_BOTTLE = ITEMS.register("powder_snow_bottle", () -> new Item(new Item.Properties().stacksTo(8).tab(VSTab.TAB)));
    public static final RegistryObject<Item> MILK_BOTTLE = ITEMS.register("milk_glass_bottle", () -> new MilkBottleItem(new Item.Properties().stacksTo(8).tab(VSTab.TAB)));
    public static final RegistryObject<Item> SPLASH_GLASS_BOTTLE = ITEMS.register("splash_glass_bottle", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> LINGERING_GLASS_BOTTLE = ITEMS.register("lingering_glass_bottle", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> SPLASH_EXPERIENCE_BOTTLE = ITEMS.register("splash_experience_bottle", () -> new ExperienceBottleItem(new Item.Properties().rarity(Rarity.UNCOMMON).tab(VSTab.TAB)));
    public static final RegistryObject<Item> LINGERING_EXPERIENCE_BOTTLE = ITEMS.register("lingering_experience_bottle", () -> new ExperienceBottleItem(new Item.Properties().rarity(Rarity.UNCOMMON).tab(VSTab.TAB)));
    public static final RegistryObject<Item> SPLASH_DRAGON_BREATH = ITEMS.register("splash_dragon_breath", () -> new Item(new Item.Properties().craftRemainder(Items.SPLASH_POTION).rarity(Rarity.UNCOMMON).tab(VSTab.TAB)));
    public static final RegistryObject<Item> LINGERING_DRAGON_BREATH = ITEMS.register("lingering_dragon_breath", () -> new Item(new Item.Properties().craftRemainder(Items.LINGERING_POTION).rarity(Rarity.UNCOMMON).tab(VSTab.TAB)));
    public static final RegistryObject<Item> STYLISED_POT = ITEMS.register("stylised_pot", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> GUNPOWDER_POT = ITEMS.register("gunpowder_pot", () -> new Item(new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    public static final RegistryObject<Item> REDSTONE_POT = ITEMS.register("redstone_pot", () -> new Item(new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    public static final RegistryObject<Item> GLOWSTONE_POT = ITEMS.register("glowstone_pot", () -> new Item(new Item.Properties().stacksTo(1).food(VariantFoods.GLOWSTONE_POT).tab(VSTab.TAB)));
    public static final RegistryObject<Item> SUGAR_POT = ITEMS.register("sugar_pot", () -> new Item(new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    public static final RegistryObject<Item> SWEET_BERRY_POT = ITEMS.register("sweet_berry_pot", () -> new BerryPotItem(new Item.Properties().food(Foods.APPLE).stacksTo(8).tab(VSTab.TAB)));
    public static final RegistryObject<Item> GLOW_BERRY_POT = ITEMS.register("glow_berry_pot", () -> new BerryPotItem(new Item.Properties().food(Foods.APPLE).stacksTo(8).tab(VSTab.TAB)));
    public static final RegistryObject<Item> HONEY_BALL = ITEMS.register("honey_ball", () -> new HoneyBallItem(new Item.Properties().food(Foods.HONEY_BOTTLE).tab(VSTab.TAB)));
    public static final RegistryObject<Item> FISH = ITEMS.register("old_cod", () -> new Item(new Item.Properties().food(Foods.COD).tab(VSTab.TAB)));
    public static final RegistryObject<Item> COOKED_FISH = ITEMS.register("old_cooked_cod", () -> new Item(new Item.Properties().food(Foods.COOKED_COD).tab(VSTab.TAB)));
    public static final RegistryObject<Item> SPAWNER_MINECART = ITEMS.register("spawner_minecart", () -> new MinecartItem(AbstractMinecart.Type.SPAWNER, new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    public static final RegistryObject<Item> PAINTING_BOAT = ITEMS.register("painting_boat", () -> new Item(new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    public static final RegistryObject<Item> CRIMSON_BOAT = ITEMS.register("crimson_boat", () -> new Item(new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    public static final RegistryObject<Item> WARPED_BOAT = ITEMS.register("warped_boat", () -> new Item(new Item.Properties().stacksTo(1).tab(VSTab.TAB)));
    public static final RegistryObject<Item> WOODEN_RAILBED = ITEMS.register("wooden_railbed", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> POWERED_RAILBED = ITEMS.register("powered_railbed", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> IRON_TIE = ITEMS.register("iron_tie", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> CORNER_IRON_TIE = ITEMS.register("corner_iron_tie", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> POWERED_TIE = ITEMS.register("powered_tie", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> DETECTOR_PLATE = ITEMS.register("detector_plate", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> WHITE_SHULKER_SHELL = ITEMS.register("white_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> ORANGE_SHULKER_SHELL = ITEMS.register("orange_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> MAGENTA_SHULKER_SHELL = ITEMS.register("magenta_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> LIGHT_BLUE_SHULKER_SHELL = ITEMS.register("light_blue_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> GLOW_BLACK_SHULKER_SHELL = ITEMS.register("glow_black_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> YELLOW_SHULKER_SHELL = ITEMS.register("yellow_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> LIME_SHULKER_SHELL = ITEMS.register("lime_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> PINK_SHULKER_SHELL = ITEMS.register("pink_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> GRAY_SHULKER_SHELL = ITEMS.register("gray_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> LIGHT_GRAY_SHULKER_SHELL = ITEMS.register("light_gray_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> CYAN_SHULKER_SHELL = ITEMS.register("cyan_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> PURPLE_SHULKER_SHELL = ITEMS.register("purple_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> BLUE_SHULKER_SHELL = ITEMS.register("blue_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> BROWN_SHULKER_SHELL = ITEMS.register("brown_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> GREEN_SHULKER_SHELL = ITEMS.register("green_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> RED_SHULKER_SHELL = ITEMS.register("red_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));
    public static final RegistryObject<Item> BLACK_SHULKER_SHELL = ITEMS.register("black_shulker_shell", () -> new Item(new Item.Properties().tab(VSTab.TAB)));

    // Foodstuffs
    public static final RegistryObject<Item> oak_fungi_stew = ITEMS.register("oak_fungi_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> spruce_fungi_stew = ITEMS.register("spruce_fungi_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> birch_fungi_stew = ITEMS.register("birch_fungi_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> jungle_fungi_stew = ITEMS.register("jungle_fungi_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> acacia_fungi_stew = ITEMS.register("acacia_fungi_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> dark_oak_fungi_stew = ITEMS.register("dark_oak_fungi_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> painting_fungi_stew = ITEMS.register("painting_fungi_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> crimson_fungi_stew = ITEMS.register("crimson_fungi_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> warped_fungi_stew = ITEMS.register("warped_fungi_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> ender_fungi_stew = ITEMS.register("ender_fungi_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> oak_end_fungi_stew = ITEMS.register("oak_end_fungi_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> spruce_end_fungi_stew = ITEMS.register("spruce_end_fungi_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> birch_end_fungi_stew = ITEMS.register("birch_end_fungi_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> jungle_end_fungi_stew = ITEMS.register("jungle_end_fungi_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> acacia_end_fungi_stew = ITEMS.register("acacia_end_fungi_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> dark_oak_end_fungi_stew = ITEMS.register("dark_oak_end_fungi_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> painting_end_fungi_stew = ITEMS.register("painting_end_fungi_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> crimson_end_fungi_stew = ITEMS.register("crimson_end_fungi_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> warped_end_fungi_stew = ITEMS.register("warped_end_fungi_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> ender_end_fungi_stew = ITEMS.register("ender_end_fungi_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> oak_mushroom_stew = ITEMS.register("oak_mushroom_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> spruce_mushroom_stew = ITEMS.register("spruce_mushroom_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> birch_mushroom_stew = ITEMS.register("birch_mushroom_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> jungle_mushroom_stew = ITEMS.register("jungle_mushroom_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> acacia_mushroom_stew = ITEMS.register("acacia_mushroom_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> dark_oak_mushroom_stew = ITEMS.register("dark_oak_mushroom_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> painting_mushroom_stew = ITEMS.register("painting_mushroom_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> crimson_mushroom_stew = ITEMS.register("crimson_mushroom_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> warped_mushroom_stew = ITEMS.register("warped_mushroom_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> ender_mushroom_stew = ITEMS.register("ender_mushroom_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> oak_suspicious_stew = ITEMS.register("oak_suspicious_stew", () -> new CustomSuspiciousSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> spruce_suspicious_stew = ITEMS.register("spruce_suspicious_stew", () -> new CustomSuspiciousSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> birch_suspicious_stew = ITEMS.register("birch_suspicious_stew", () -> new CustomSuspiciousSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> jungle_suspicious_stew = ITEMS.register("jungle_suspicious_stew", () -> new CustomSuspiciousSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> acacia_suspicious_stew = ITEMS.register("acacia_suspicious_stew", () -> new CustomSuspiciousSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> dark_oak_suspicious_stew = ITEMS.register("dark_oak_suspicious_stew", () -> new CustomSuspiciousSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> painting_suspicious_stew = ITEMS.register("painting_suspicious_stew", () -> new CustomSuspiciousSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> crimson_suspicious_stew = ITEMS.register("crimson_suspicious_stew", () -> new CustomSuspiciousSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> warped_suspicious_stew = ITEMS.register("warped_suspicious_stew", () -> new CustomSuspiciousSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> ender_suspicious_stew = ITEMS.register("ender_suspicious_stew", () -> new CustomSuspiciousSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.MUSHROOM_STEW)));
    public static final RegistryObject<Item> oak_rabbit_stew = ITEMS.register("oak_rabbit_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> spruce_rabbit_stew = ITEMS.register("spruce_rabbit_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> birch_rabbit_stew = ITEMS.register("birch_rabbit_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> jungle_rabbit_stew = ITEMS.register("jungle_rabbit_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> acacia_rabbit_stew = ITEMS.register("acacia_rabbit_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> dark_oak_rabbit_stew = ITEMS.register("dark_oak_rabbit_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> painting_rabbit_stew = ITEMS.register("painting_rabbit_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> crimson_rabbit_stew = ITEMS.register("crimson_rabbit_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> warped_rabbit_stew = ITEMS.register("warped_rabbit_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> ender_rabbit_stew = ITEMS.register("ender_rabbit_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.RABBIT_STEW)));
    public static final RegistryObject<Item> oak_beetroot_soup = ITEMS.register("oak_beetroot_soup", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> spruce_beetroot_soup = ITEMS.register("spruce_beetroot_soup", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> birch_beetroot_soup = ITEMS.register("birch_beetroot_soup", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> jungle_beetroot_soup = ITEMS.register("jungle_beetroot_soup", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> acacia_beetroot_soup = ITEMS.register("acacia_beetroot_soup", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> dark_oak_beetroot_soup = ITEMS.register("dark_oak_beetroot_soup", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> painting_beetroot_soup = ITEMS.register("painting_beetroot_soup", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> crimson_beetroot_soup = ITEMS.register("crimson_beetroot_soup", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> warped_beetroot_soup = ITEMS.register("warped_beetroot_soup", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> ender_beetroot_soup = ITEMS.register("ender_beetroot_soup", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.BEETROOT_SOUP)));
    public static final RegistryObject<Item> oak_water_stew = ITEMS.register("oak_water_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> spruce_water_stew = ITEMS.register("spruce_water_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> birch_water_stew = ITEMS.register("birch_water_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> jungle_water_stew = ITEMS.register("jungle_water_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> acacia_water_stew = ITEMS.register("acacia_water_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> dark_oak_water_stew = ITEMS.register("dark_oak_water_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> painting_water_stew = ITEMS.register("painting_water_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> crimson_water_stew = ITEMS.register("crimson_water_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> warped_water_stew = ITEMS.register("warped_water_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> ender_water_stew = ITEMS.register("ender_water_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.WATER_BOWL)));
    public static final RegistryObject<Item> oak_lava_stew = ITEMS.register("oak_lava_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> spruce_lava_stew = ITEMS.register("spruce_lava_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> birch_lava_stew = ITEMS.register("birch_lava_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> jungle_lava_stew = ITEMS.register("jungle_lava_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> acacia_lava_stew = ITEMS.register("acacia_lava_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> dark_oak_lava_stew = ITEMS.register("dark_oak_lava_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> painting_lava_stew = ITEMS.register("painting_lava_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> crimson_lava_stew = ITEMS.register("crimson_lava_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> warped_lava_stew = ITEMS.register("warped_lava_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> ender_lava_stew = ITEMS.register("ender_lava_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.LAVA_BOWL)));
    public static final RegistryObject<Item> oak_milk_stew = ITEMS.register("oak_milk_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> spruce_milk_stew = ITEMS.register("spruce_milk_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> birch_milk_stew = ITEMS.register("birch_milk_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> jungle_milk_stew = ITEMS.register("jungle_milk_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> acacia_milk_stew = ITEMS.register("acacia_milk_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> dark_oak_milk_stew = ITEMS.register("dark_oak_milk_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> painting_milk_stew = ITEMS.register("painting_milk_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> crimson_milk_stew = ITEMS.register("crimson_milk_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> warped_milk_stew = ITEMS.register("warped_milk_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> ender_milk_stew = ITEMS.register("ender_milk_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(VariantFoods.STANDARD_BOWL)));
    public static final RegistryObject<Item> oak_powder_snow_stew = ITEMS.register("oak_powder_snow_stew", () -> new CustomSoupItem.OakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
    public static final RegistryObject<Item> spruce_powder_snow_stew = ITEMS.register("spruce_powder_snow_stew", () -> new CustomSoupItem.SpruceBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
    public static final RegistryObject<Item> birch_powder_snow_stew = ITEMS.register("birch_powder_snow_stew", () -> new CustomSoupItem.BirchBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
    public static final RegistryObject<Item> jungle_powder_snow_stew = ITEMS.register("jungle_powder_snow_stew", () -> new CustomSoupItem.JungleBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
    public static final RegistryObject<Item> acacia_powder_snow_stew = ITEMS.register("acacia_powder_snow_stew", () -> new CustomSoupItem.AcaciaBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
    public static final RegistryObject<Item> dark_oak_powder_snow_stew = ITEMS.register("dark_oak_powder_snow_stew", () -> new CustomSoupItem.DarkOakBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
    public static final RegistryObject<Item> painting_powder_snow_stew = ITEMS.register("painting_powder_snow_stew", () -> new CustomSoupItem.PaintingBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
    public static final RegistryObject<Item> crimson_powder_snow_stew = ITEMS.register("crimson_powder_snow_stew", () -> new CustomSoupItem.CrimsonBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
    public static final RegistryObject<Item> warped_powder_snow_stew = ITEMS.register("warped_powder_snow_stew", () -> new CustomSoupItem.WarpedBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
    public static final RegistryObject<Item> ender_powder_snow_stew = ITEMS.register("ender_powder_snow_stew", () -> new CustomSoupItem.EnderBowl(new Item.Properties().stacksTo(1).tab(Variants.VARIANT_FOODSTUFFS).food(Foods.APPLE)));
}
